{"version":3,"sources":["components/Section.tsx","views/Software.tsx","views/Photo.tsx","views/Tech.tsx","views/Web.tsx","components/Logo.tsx","components/Backgrounds/Holder.tsx","components/Backgrounds/Gradient.tsx","components/NavigationLink.tsx","components/Navigation.tsx","components/Backgrounds/Particles.tsx","components/Slideshow.tsx","components/Header.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["Section","styled","section","excludedRepos","Software","useState","repos","setRepos","useEffect","length","filtered","filter","repo","includes","name","sort","a","b","stargazers_count","watchers_count","console","log","Octokit","listForUser","username","type","then","data","Photo","Tech","StyledH1","h1","Logo","Holder","figure","BackgroundHolder","props","showing","className","otherProps","aria-hidden","classnames","defaultProps","subtleTransition","keyframes","gradientCss","css","Gradient","StyledLink","Link","withRouter","location","history","match","staticContext","current","to","pathname","children","StyledNav","nav","Navigation","particleSettings","particles","number","value","density","enable","value_area","color","shape","stroke","width","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","onclick","resize","retina_detect","Particles","id","renderedParticles","setRenderedParticles","window","particlesJS","AwesomeSlider","require","default","StyledSlider","Progress","div","Slider","images","isPlaying","transitionTime","reset","setReset","slider","useRef","clickNext","interval","timeout","doReset","clearInterval","clearTimeout","setTimeout","setInterval","organicArrows","fillParent","ref","map","image","i","data-src","key","StyledHeader","header","pageIs","page","indexOf","showingSlideshow","setShowingSlideshow","showingParticles","setShowingParticles","hovering","setHovering","Slideshow","onMouseEnter","onMouseLeave","App","exact","path","component","Web","Boolean","hostname","rootElement","document","getElementById","hasChildNodes","hydrate","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.896070ef.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Section = styled.section`\n  display: flex;\n  flex-grow: 1;\n`;\n\nexport default Section;\n","import React, { useState, useEffect } from \"react\";\nimport Section from \"../components/Section\";\nimport Octokit, { ReposGetResponse } from \"@octokit/rest\";\n\nconst excludedRepos = [\"gallery-part-1-pkmnct\", \"625-hw4\", \"pkmnct.github.io\"];\n\nconst Software = () => {\n  const [repos, setRepos] = useState([]);\n\n  useEffect(() => {\n    if (repos.length) {\n      const filtered = repos.filter(\n        (repo: ReposGetResponse) => !excludedRepos.includes(repo.name)\n      );\n      filtered.sort((a: ReposGetResponse, b: ReposGetResponse) =>\n        (a.stargazers_count + a.watchers_count) / 2 >\n        (b.stargazers_count + b.watchers_count) / 2\n          ? -1\n          : (a.stargazers_count + a.watchers_count) / 2 <\n            (b.stargazers_count + b.watchers_count) / 2\n          ? 1\n          : 0\n      );\n      console.log(filtered);\n    } else {\n      const octokit = new Octokit();\n      octokit.repos\n        .listForUser({ username: \"pkmnct\", type: \"all\", sort: \"updated\" })\n        .then(({ data }) => setRepos(data));\n    }\n  }, [repos]);\n\n  return <Section></Section>;\n};\n\nexport default Software;\n","import React from \"react\";\nimport Section from \"../components/Section\";\n\nconst Photo = () => {\n  return <Section></Section>;\n};\n\nexport default Photo;\n","import React from \"react\";\nimport Section from \"../components/Section\";\n\nconst Tech = () => {\n  return <Section></Section>;\n};\n\nexport default Tech;\n","import React from \"react\";\nimport Section from \"../components/Section\";\n\nconst Photo = () => {\n  return <Section></Section>;\n};\n\nexport default Photo;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledH1 = styled.h1`\n  font-family: \"Abril Fatface\", cursive;\n  font-weight: 400;\n  padding: 16px;\n  margin: 0;\n`;\n\nconst Logo = () => {\n  return <StyledH1>George W. Walker</StyledH1>;\n};\n\nexport default Logo;\n","import styled from \"styled-components\";\nimport { HTMLAttributes, ReactNode } from \"react\";\nimport classnames from \"classnames\";\nimport React from \"react\";\n\nconst Holder = styled.figure`\n  position: absolute;\n  z-index: -1;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n  opacity: 0;\n  transition: opacity ease-in-out 0.3s;\n  margin: 0;\n  &.showing {\n    opacity: 1;\n  }\n`;\n\ninterface BackgroundHolderProps extends HTMLAttributes<HTMLElement> {\n  gradient?: Boolean;\n  showing?: Boolean;\n  children?: ReactNode;\n}\n\nconst BackgroundHolder = (props: BackgroundHolderProps) => {\n  const { showing, className, ...otherProps } = props;\n  return (\n    <Holder\n      aria-hidden=\"true\"\n      className={classnames(className, { showing })}\n      {...otherProps}\n    />\n  );\n};\n\nBackgroundHolder.defaultProps = {\n  showing: false\n};\n\nexport default BackgroundHolder;\n","import styled, { keyframes, css } from \"styled-components\";\nimport Holder from \"./Holder\";\n\nexport const subtleTransition = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`;\n\nexport const gradientCss = css`\n  background: linear-gradient(225deg, rgb(255, 229, 79), rgb(179, 46, 136));\n  animation: ${subtleTransition} 15s linear infinite;\n  background-size: 300% 300%;\n`;\n\nexport const Gradient = styled(Holder)`\n  ${gradientCss}\n`;\n\nexport default Gradient;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Link,\n  withRouter,\n  RouteComponentProps,\n  LinkProps\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { gradientCss } from \"./Backgrounds/Gradient\";\n\ninterface NavigationLinkProps extends RouteComponentProps, LinkProps {}\n\nconst StyledLink = styled(Link)`\n  color: #fff;\n  text-decoration: none;\n  text-align: center;\n  font-family: \"Cousine\", monospace;\n  font-weight: bold;\n  background: transparent;\n  transition: background ease-in-out 0.3s, color ease-in-out 0.3s;\n  padding: 0.25em 0.5em;\n  margin: 0 0.5em;\n  position: relative;\n  &:hover,\n  &.current {\n    transition: background ease-in-out 0.3s 0.4s, color ease-in-out 0.3s 0.4s;\n    color: transparent;\n    ${gradientCss}\n    -webkit-background-clip: text;\n  }\n  &:after {\n    content: \"\";\n    z-index: -1;\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    height: 0.25em;\n    background: #fff;\n    transition: width ease-in-out 0.3s, height ease-in-out 0.3s 0.4s;\n    width: 0;\n  }\n  &:hover:after,\n  &.current:after {\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n    transition: width ease-in-out 0.3s, height ease-in-out 0.3s 0.4s;\n  }\n`;\n\nconst NavigationLink = (props: NavigationLinkProps) => {\n  const {\n    location,\n    className,\n    history,\n    match,\n    staticContext,\n    ...otherProps\n  } = props;\n\n  return (\n    <StyledLink\n      {...otherProps}\n      className={classnames(className, {\n        current: props.to === location.pathname\n      })}\n    >\n      {props.children}\n    </StyledLink>\n  );\n};\n\nexport default withRouter(NavigationLink);\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nconst StyledNav = styled.nav`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  transform-origin: 0 0;\n  width: 100%;\n`;\n\ninterface NavigationProps extends React.HTMLAttributes<HTMLElement> {}\n\nconst Navigation = (props: NavigationProps) => {\n  return <StyledNav {...props} />;\n};\n\nexport default Navigation;\n","import React, { HTMLAttributes, useEffect, useState } from \"react\";\nimport \"particles.js/particles\";\nimport Holder from \"./Holder\";\n\ninterface WindowWithParticles extends Window {\n  particlesJS(id: string, settings: object, callback: Function): void;\n}\ndeclare var window: WindowWithParticles;\n\nconst particleSettings = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    color: {\n      value: \"#ffffff\"\n    },\n    shape: {\n      type: \"circle\",\n      stroke: {\n        width: 0,\n        color: \"#000000\"\n      },\n      polygon: {\n        nb_sides: 5\n      }\n    },\n    opacity: {\n      value: 0.5,\n      random: false,\n      anim: {\n        enable: false,\n        speed: 1,\n        opacity_min: 0.1,\n        sync: false\n      }\n    },\n    size: {\n      value: 3,\n      random: true,\n      anim: {\n        enable: false,\n        speed: 40,\n        size_min: 0.1,\n        sync: false\n      }\n    },\n    line_linked: {\n      enable: true,\n      distance: 150,\n      color: \"#ffffff\",\n      opacity: 0.4,\n      width: 1\n    },\n    move: {\n      enable: true,\n      speed: 2,\n      direction: \"none\",\n      random: false,\n      straight: false,\n      out_mode: \"out\",\n      bounce: false,\n      attract: {\n        enable: false,\n        rotateX: 600,\n        rotateY: 1200\n      }\n    }\n  },\n  interactivity: {\n    detect_on: \"canvas\",\n    events: {\n      onhover: {\n        enable: false\n      },\n      onclick: {\n        enable: false\n      },\n      resize: true\n    }\n  },\n  retina_detect: true\n};\n\ninterface ParticlesProps extends HTMLAttributes<HTMLElement> {\n  id: string;\n  showing: Boolean;\n}\n\nconst Particles = (props: ParticlesProps) => {\n  const { id, showing, ...otherProps } = props;\n  const [renderedParticles, setRenderedParticles] = useState(false);\n  useEffect(() => {\n    if (showing && !renderedParticles) {\n      setRenderedParticles(true);\n      window.particlesJS(id, particleSettings, () => {});\n    }\n  }, [showing, renderedParticles, id]);\n  return <Holder id={id} showing={showing} {...otherProps} />;\n};\n\nParticles.defaultProps = {\n  id: \"particles\"\n};\n\nexport default Particles;\n","import React, { HTMLAttributes, useRef, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport \"react-awesome-slider/dist/styles.css\";\nimport classnames from \"classnames\";\nconst AwesomeSlider = require(\"react-awesome-slider\").default;\n\nconst StyledSlider = styled(AwesomeSlider)`\n  &.aws-sld {\n    --loader-bar-color: transparent;\n  }\n  & nav {\n    display: none;\n  }\n`;\n\ninterface SliderProps extends HTMLAttributes<HTMLElement> {\n  images: Array<string>;\n  isPlaying?: Boolean;\n  transitionTime: number;\n}\n\n// TODO: ${transitionTime - 500}ms not working due to different generated classnames\nconst Progress = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 2;\n  height: 8px;\n  background-color: rgb(179, 46, 136);\n  width: 0;\n  transition: width linear 7500ms;\n  &.isPlaying {\n    width: 100%;\n  }\n  &.reset {\n    transition: none;\n    width: 0;\n  }\n`;\n\nconst Slider = (props: SliderProps) => {\n  const { images, isPlaying, transitionTime } = props;\n  const [reset, setReset] = useState(false);\n  const slider = useRef({ clickNext: () => {} });\n\n  useEffect(() => {\n    let interval: number, timeout: number;\n    const doReset = () => {\n      interval && clearInterval(interval);\n      timeout && clearTimeout(timeout);\n      setReset(true);\n    };\n    if (slider.current && isPlaying) {\n      timeout = setTimeout(() => setReset(false), 300);\n      interval = setInterval(() => {\n        slider.current.clickNext();\n        setReset(true);\n        timeout = setTimeout(() => setReset(false), 300);\n      }, transitionTime);\n    } else {\n      doReset();\n    }\n    return doReset;\n  }, [isPlaying, transitionTime]);\n\n  return (\n    <>\n      <StyledSlider organicArrows={false} fillParent ref={slider}>\n        {images.map((image, i) => (\n          <div data-src={image} key={i} />\n        ))}\n      </StyledSlider>\n      <Progress\n        className={classnames({ isPlaying: isPlaying }, { reset: reset })}\n      />\n    </>\n  );\n};\n\nSlider.defaultProps = {\n  isPlaying: true,\n  transitionTime: 8000,\n  images: []\n};\n\nexport default Slider;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Logo from \"./Logo\";\nimport NavigationLink from \"../components/NavigationLink\";\nimport Navigation from \"../components/Navigation\";\nimport BackgroundHolder from \"../components/Backgrounds/Holder\";\nimport ParticlesBackground from \"../components/Backgrounds/Particles\";\nimport GradientBackground from \"../components/Backgrounds/Gradient\";\nimport Slideshow from \"../components/Slideshow\";\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #fff;\n`;\n\nconst StyledHeader = styled.header`\n  text-align: center;\n`;\n\nconst Header = (props: RouteComponentProps) => {\n  const { location } = props;\n  const pageIs = (page: string) => location.pathname.indexOf(page) !== -1;\n\n  const [showingSlideshow, setShowingSlideshow] = useState(pageIs(\"photo\"));\n  const [showingParticles, setShowingParticles] = useState(pageIs(\"web\"));\n  const [hovering, setHovering] = useState(\"\");\n\n  const handleWebMouseEnter = () => {\n    setShowingParticles(true);\n    setHovering(\"web\");\n  };\n\n  const handleWebMouseLeave = () => {\n    !pageIs(\"web\") && setShowingParticles(false);\n    setHovering(\"\");\n  };\n\n  const handlePhotoMouseEnter = () => {\n    setShowingSlideshow(true);\n    setHovering(\"photo\");\n  };\n\n  const handlePhotoMouseLeave = () => {\n    !pageIs(\"photo\") && setShowingSlideshow(false);\n    setHovering(\"\");\n  };\n\n  // Keep backgrounds for each section\n  useEffect(() => {\n    setShowingParticles(false);\n    setShowingSlideshow(false);\n    const pageIs = (page: string) => location.pathname.indexOf(page) !== -1;\n    if (pageIs(\"web\")) {\n      setShowingParticles(true);\n    } else if (pageIs(\"photo\")) {\n      setShowingSlideshow(true);\n    }\n  }, [location.pathname]);\n\n  return (\n    <>\n      <GradientBackground showing />\n      <ParticlesBackground showing={showingParticles} />\n      <BackgroundHolder showing={showingSlideshow && !(hovering === \"web\")}>\n        <Slideshow\n          isPlaying={showingSlideshow}\n          images={[\n            \"/images/05.03.15.BSFSLightning.01.jpg\",\n            \"/images/03.08.15.Birds.GW.01.jpg\"\n          ]}\n        />\n      </BackgroundHolder>\n      <StyledHeader>\n        <StyledLink to=\"/\">\n          <Logo />\n        </StyledLink>\n        <Navigation>\n          <NavigationLink to=\"/software\">Software Engineer</NavigationLink>\n          <NavigationLink\n            to=\"/web\"\n            onMouseEnter={handleWebMouseEnter}\n            onMouseLeave={handleWebMouseLeave}\n          >\n            Web Developer\n          </NavigationLink>\n          <NavigationLink\n            to=\"/photo\"\n            onMouseEnter={handlePhotoMouseEnter}\n            onMouseLeave={handlePhotoMouseLeave}\n          >\n            Photographer\n          </NavigationLink>\n          <NavigationLink to=\"/tech\">Tech Enthusiast</NavigationLink>\n        </Navigation>\n      </StyledHeader>\n    </>\n  );\n};\n\nexport default withRouter(Header);\n","import { Route, BrowserRouter } from \"react-router-dom\";\nimport Software from \"./views/Software\";\nimport Photo from \"./views/Photo\";\nimport Tech from \"./views/Tech\";\nimport Web from \"./views/Web\";\nimport React from \"react\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Route exact path=\"/Software\" component={Software} />\n      <Route exact path=\"/Tech\" component={Tech} />\n      <Route exact path=\"/Photo\" component={Photo} />\n      <Route exact path=\"/Web\" component={Web} />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { hydrate, render } from \"react-dom\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement!.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}